% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/breakIntoCNPs.chrom.R
\name{breakIntoCNPs.chrom}
\alias{breakIntoCNPs.chrom}
\title{Determine which segments have to be removed and redistribute 
probes/bins from removed segments}
\usage{
breakIntoCNPs.chrom(
  segTable,
  chrom,
  startPos,
  endPos,
  startProbe,
  endProbe,
  eventIndex,
  cnpTable,
  cnpChrom,
  cnpStart,
  cnpEnd,
  cnpIndex,
  minCover,
  indexVals
)
}
\arguments{
\item{segTable}{a \code{matrix} or a \code{data.frame} with columns 
named or enumerated by the values of 
\code{chrom, startPos, endPos, startProbe, endProbe, eventIndex}.}

\item{chrom}{a \code{character} string specifying the name for the column in 
\code{segTable} tabulating the (integer) chromosome number for each segment.}

\item{startPos}{a \code{character} string or integer specifying the 
name or number of columns in \code{segTable} that tabulates the (integer) 
genomic start coordinate of each segment.}

\item{endPos}{a \code{character} string or integer specifying the 
name or number of columns in \code{segTable} that tabulates the (integer) 
genomic end coordinate of each segment.}

\item{startProbe}{a \code{character} string specifying the name of 
column in \code{segTable} that tabulates the (integer) start position 
of each segment in internal units such as probe numbers for 
data of CGH microarray origin.}

\item{endProbe}{a \code{character} string specifying the name of the
column in \code{segTable} that tabulates the (integer) end position 
of each segment in internal units such as probe numbers for 
data of CGH microarray origin.}

\item{eventIndex}{a \code{character} string giving the name of the column in 
\code{segTable} where copy number variation status of the segments is 
tabulated.}

\item{cnpTable}{a \code{matrix} or a \code{data.frame} with columns named or 
enumerated as given by \code{cnpChrom, cnpStart, cnpEnd, cnpIndex} and 
with rows corresponding to genomic intervals that comprise the mask.}

\item{cnpChrom}{a \code{character} string or \code{integer} 
specifying the name or number of columns in \code{cnpTable} that tabulates 
the chromosome number of the intervals comprising the mask.}

\item{cnpStart}{a \code{character} string or \code{integer} 
specifying the name or number of columns in \code{masktable} that tabulates 
the genomic start coordinates of the intervals comprising the mask.}

\item{cnpEnd}{a \code{character} string or \code{integer} 
specifying the name or number of columns in \code{masktable} that tabulates 
the genomic end coordinates of the intervals comprising the mask.}

\item{cnpIndex}{a \code{numeric} \code{vector} corresponding to 
\code{eventIndex}, specifying copy number events status for measuring units.}

\item{minCover}{A single \code{numeric} value between \code{0} and \code{1} 
specifying the degree of overlap above which two clusters will be joined 
into one.}

\item{indexVals}{a \code{numeric} \code{vector} of length 2 
specifying the two values in \code{maskindex} to be matched 
with values in \code{eventIndex} to 
determine the events that are to be masked.}
}
\value{
a \code{matrix} of \code{numeric} with 3 columns: 
\enumerate{
    \item the updated start position (integer) of each segment in internal 
    units. This column has the same name than the \code{startProbe} 
    parameter.
    \item the updated end position (integer) of each segment in internal 
    units. This column has the same name than the \code{endProbe} parameter.
    \item the masked result: \code{0} when the segment is retained, 
    \code{1} when the segment
    is removed. This column is called "toremove".
}
}
\description{
This function determines which segments have to be removed and
redistributes the probes/bins from a removed segment 
into the adjacent segments for one specific chromosome at the time.
}
\examples{

# Table containing information about segments in the chromosome
segTable <- data.frame(ID=c(rep("WZ1", 5)), 
    start=c(1, 16, 23, 31, 38),
    end=c(15, 22, 30, 37, 50),
    seg.median=c(0.03779, -0.51546, 0.2431, -0.2259, 0.0372),
    chrom=c(rep(1, 5)),
    chrom.pos.start=c(932544, 16004440, 38093655, 78729960, 103416416),
    chrom.pos.end=c(15844870, 37974708, 78619856, 103394039, 142176090),
    eventIndex=c(0, 0, 1, 0, -1))
    
# Table with copy number information
cnptable <- matrix(c(rep(1, 3), c(932544, 38093688, 123416446), 
    c(11844870, 48619856, 182176090), rep(1,3)), ncol=4, byrow=FALSE,
    dimnames=list(NULL, c("chrom", "start", "end", "cnpindex")))
    
# This function redistributes the bins/probes from a removed segment into 
# the adjacent segments  
CNprep:::breakIntoCNPs.chrom(segTable=segTable, chrom="chrom", 
    startPos="chrom.pos.start", endPos="chrom.pos.end", 
    startProbe="start", endProbe="end", 
    eventIndex="eventIndex", 
    cnpTable=cnptable, cnpChrom="chrom",  
    cnpStart="start", cnpEnd="end", cnpIndex="cnpindex", 
    minCover=0.005, indexVals=c(-1, 1))

}
\author{
Alexander Krasnitz, Guoli Sun
}
\keyword{internal}
